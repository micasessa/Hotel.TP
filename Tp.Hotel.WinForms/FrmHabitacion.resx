<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wjLjkgAAAABJRU5ErkJggg==
</value>
  </data>
</root>